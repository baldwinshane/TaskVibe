```markdown
# Sphinx Directory File Tree

This file describes the complete directory structure for the Sphinx documentation setup in the TaskVibe project, located in the `docs/` directory. The structure supports Markdown and reStructuredText files, integrates with MyST-Parser, and generates HTML output for hosting on GitHub Pages.

```
docs/
├── conf.py
├── index.rst
├── readme_link.md
├── introduction.md
├── installation.rst
├── api.rst
├── guides/
│   ├── getting_started.md
│   ├── configuration.md
│   └── deployment.md
├── reference/
│   ├── backend.rst
│   ├── frontend.rst
│   └── database.rst
├── _build/
│   ├── html/
│   │   ├── index.html
│   │   ├── readme_link.html
│   │   ├── introduction.html
│   │   ├── installation.html
│   │   ├── api.html
│   │   ├── guides/
│   │   └── reference/
│   ├── latex/
│   │   └── TaskVibe.pdf
│   └── doctrees/
├── _static/
│   ├── custom.css
│   ├── logo.png
│   └── favicon.ico
├── _templates/
│   ├── layout.html
│   ├── sidebar.html
│   └── footer.html
├── make.bat
└── Makefile
```

## File and Directory Descriptions

### Configuration Files
- **conf.py**: Sphinx configuration file. Defines extensions (`myst_parser` for Markdown, `sphinx_rtd_theme` for styling), source file suffixes (`.rst`, `.md`), project metadata (e.g., `project = 'TaskVibe'`, `version = '1.0.0'`), and HTML output settings.
- **make.bat**: Batch file for building Sphinx documentation on Windows (e.g., `make.bat html` to generate HTML output).
- **Makefile**: Makefile for building Sphinx documentation on Unix-like systems, such as in GitHub Codespaces (e.g., `make html`).

### Main Documentation Files
- **index.rst**: The main reStructuredText file, serving as the documentation entry point. Contains the table of contents (toctree) linking to all other documentation files (e.g., `readme_link`, `introduction`, `installation`).
- **readme_link.md**: A Markdown file that includes the project's `README.md` using MyST-Parser’s `{include}` directive, ensuring the project overview is part of the Sphinx-generated documentation.
- **introduction.md**: A Markdown file providing an overview of TaskVibe, its purpose (a Haskell-based scheduling web app), and key features.
- **installation.rst**: A reStructuredText file detailing how to set up TaskVibe in GitHub Codespaces, including Haskell, Python, and Node.js dependencies.
- **api.rst**: A reStructuredText file documenting TaskVibe’s backend API endpoints, generated using the `scotty` Haskell framework.

### Guides Directory
- **guides/getting_started.md**: A Markdown file with a beginner’s guide to using TaskVibe, including how to create a schedule and access the web interface.
- **guides/configuration.md**: A Markdown file explaining how to configure TaskVibe (e.g., environment variables, database settings).
- **guides/deployment.md**: A Markdown file outlining deployment steps for the Haskell backend and GitHub Pages frontend.

### Reference Directory
- **reference/backend.rst**: A reStructuredText file documenting the Haskell backend, including modules, functions, and architecture.
- **reference/frontend.rst**: A reStructuredText file describing the frontend (HTML, CSS with Tailwind, JavaScript), including UI components and interactions.
- **reference/database.rst**: A reStructuredText file detailing the database schema and setup (if TaskVibe uses a database, e.g., SQLite).

### Build Output
- **_build/**: Directory containing generated documentation output.
  - **html/**: Contains HTML files generated by `make html`, such as `index.html`, `readme_link.html`, and others corresponding to source files. These are copied to the `gh-pages` branch for hosting.
  - **latex/**: Contains LaTeX output (e.g., `TaskVibe.pdf`) if `make latexpdf` is run.
  - **doctrees/**: Contains Sphinx’s internal doctree files for incremental builds.

### Static Assets
- **_static/**: Directory for custom static files used in HTML output.
  - **custom.css**: Custom CSS to override the `sphinx_rtd_theme` styles (e.g., custom fonts, colors for TaskVibe branding).
  - **logo.png**: A logo image for TaskVibe, displayed in the documentation sidebar or header.
  - **favicon.ico**: A favicon for the documentation site, enhancing branding when hosted on GitHub Pages.

### Templates
- **_templates/**: Directory for custom Jinja2 templates to modify the HTML layout.
  - **layout.html**: Overrides the default Sphinx HTML layout (e.g., adds custom header/footer).
  - **sidebar.html**: Customizes the sidebar navigation (e.g., adds TaskVibe-specific links).
  - **footer.html**: Customizes the footer (e.g., includes project credits or version info).

## Usage Notes
- Run `make html` in the `docs/` directory to generate HTML output in `_build/html/`.
- Preview the documentation locally in Codespaces with `python3 -m http.server 8000 --directory _build/html`.
- Deploy to GitHub Pages by copying `_build/html/` contents to the `gh-pages` branch.
- Ensure `myst_parser` is installed (`pip3 install myst_parser`) to support Markdown files.
- Update `conf.py` to include additional extensions (e.g., `sphinx.ext.autodoc` for Haskell API documentation if integrated).
```